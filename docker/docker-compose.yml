version: '3.7'

services:

    php7-fpm:
        build:
            context: ./php7-fpm
        container_name: php-fpm
        image: my-images/php73-fpm-alpine:0.1
        restart: always
        volumes:
            - /home/docker/projects/5_lumen_restfullAPIs:/usr/share/nginx/html
        networks:
            - frontEnd-network
            - backEnd-network
        links:
            - postgresql

    nginx:
        build:
            context: ./nginx
        container_name: nginx
        env_file: .env
        image: my-images/nginx117-alpine:0.1 ## Alpine Nginx 1.17
        volumes:
            - /home/docker/projects/5_lumen_restfullAPIs:/usr/share/nginx/html
        ports:
            - 8900:${PORT}
            - 443:${HTTPS_PORT}
        networks:
            - backEnd-network
        links:
            - php7-fpm

    postgresql:
        build:
            context: ./postgresql11
        container_name: postgresql
        image: my-images/postgresql11-alpine:0.1 # Postgresql Version 11
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:5432
        networks:
            - backEnd-network

networks:
    frontEnd-network:
        name: frontEnd # available with docker-compose 1.18, using the new "name" parameter to networks
        driver: bridge
    backEnd-network:
        name: backEnd # available with docker-compose 1.18, using the new "name" parameter to networks
        driver: bridge

volumes:
    pgdata:
        name: "pgdata_5_lumenRestfulAPI"
        external: false # docker-compose up creates it, if it not exists.
